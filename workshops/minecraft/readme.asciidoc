= Minecraft Modding using Forge

== Download and Install

. Download and install JDK from http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
. Download and install Eclipse from http://www.eclipse.org/downloads/, pick "Eclipse IDE for Java Developers"
. Download and unzip Forge 1.8 from
  http://files.minecraftforge.net/maven/net/minecraftforge/forge/1.8-11.14.1.1341/forge-1.8-11.14.1.1341-src.zip
. In the unzipped forge directory, give the command `./gradlew
  setupDecompWorkspace eclipse` for Mac or `gradlew
  setupDecompWorkspace eclipse` for Windows. The output should show `BUILD SUCCESSFUL`. Complete output of the command is shown at <<Gradlew_command_output>>.

A detailed video with complete installation steps on Mac is given below:

image::images/forge-install-video-pic.png[link="https://www.youtube.com/watch?v=0F7Bhswtd_w"]

video::1S1aL9Vn5eI[youtube]

More details are also at http://www.minecraftforge.net/wiki/Installation/Source.

== Verify

This is a very important step as this will confirm that you can actually start modding.

. Open up Eclipse
. In the ``Select a workspace'' window, choose the location of `eclipse` directory in the unzipped forge directory as the workspace
. Click on ``OK''
. In the Eclipse window, you should see a ``Minecraft'' folder and be able to expand it. There should be no red exclamation marks next to it.

=== Troubleshooting

. If you selected a different directory, click on ``File'', ``Switch Workspace'', and select the correct directory.
. If you don't see Minecraft folder, the `gradlew` command might have shown some errors. Try running it again.

== The Main File

To start modding, we need a main file. This file will register all of our mods so that they actually function in the game. To make this main file, first you need to make a new package. Click on the arrow next to the "Minecraft" folder in the left side of your window. Then, right click on "src/main/java" and select New > Package. Name it `org.devoxx4kids.forge.mods`.

In this package, create a new class called `MainMod.java`. To do this, right click on the new package you created and select New > Class. Name it `MainMod`. The middle of your screen will show its code. Replace all of the code with the code in <<Setting_Up_The_Main_File>>.

[[Setting_Up_The_Main_File]]
.Set up the main file
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;

@Mod(modid = MainMod.MODID, version = MainMod.VERSION)
public class MainMod {
	public static final String MODID = "MyMods";
	public static final String VERSION = "1.0";

	@EventHandler
	public void init(FMLInitializationEvent event) {

	}
}
----
====

Your main file is now ready to go.

== Chat Items

**Purpose:** To make the player receive items when he/she says a certain word or phrase in a chat message.

**Instructions:** In your new package, `org.devoxx4kids.forge.mods`, make a new file called `ChatItems.java`. Replace its code with <<Chat_Items_Code>>.

[[Chat_Items_Code]]
.Chat Items code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraftforge.event.ServerChatEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class ChatItems {
	
	@SubscribeEvent
	public void giveItems(ServerChatEvent event){
		if (event.message.contains("potato")) {
			event.player.inventory.addItemStackToInventory(new ItemStack(Items.potato, 64));
		}
	}
}
----
====

Register your mod in the main file by using the line shown in <<Chat_Items_Registering>>. The line should go between the two brackets after the line that says `init()`.

[[Chat_Items_Registering]]
.Chat Items registering
====
[source, java]
----
MinecraftForge.EVENT_BUS.register(new ChatItems());
----
====

Your main file should now look like <<Main_File_After_Register>>.

[[Main_File_After_Register]]
.Main file after registering Chat Items
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;

@Mod(modid = MainMod.MODID, version = MainMod.VERSION)
public class MainMod {
	public static final String MODID = "MyMods";
	public static final String VERSION = "1.0";

	@EventHandler
	public void init(FMLInitializationEvent event) {
		MinecraftForge.EVENT_BUS.register(new ChatItems());
	}
}
----
====

**Gameplay:**

. Press ``T'' to open up the chat window
. Type in any message that contains the word ``potato''
. You should receive one stack (one stack = 64 items) potatoes

=== Change text/item

Change text message and produce a different item. For example change the text to ``diamond'' and item produced to `Diamond`. Use Ctrl+Space to show the list of items.

=== Different Items

Produce different items for different chat text

[[Different_Chat_Items_Code]]
.Different Chat Items code
====
[source, java]
----
@SubscribeEvent
public void giveItems(ServerChatEvent event){
	if (event.message.contains("potato")) {
		event.player.inventory.addItemStackToInventory(new ItemStack(Items.potato, 64));
	}

	if (event.message.contains("diamond")) {
		event.player.inventory.addItemStackToInventory(new ItemStack(Items.diamond, 64));
	}
}
----
====

=== Multiple Items

Produce multiple items for chat text

[[Multiple_Chat_Items_Code]]
.Multiple Chat Items code
====
[source, java]
----
@SubscribeEvent
public void giveItems(ServerChatEvent event){
	if (event.message.contains("potato")) {
		event.player.inventory.addItemStackToInventory(new ItemStack(Items.potato, 64));
		event.player.inventory.addItemStackToInventory(new ItemStack(Items.diamond, 64));
	}
}
----
====

== Ender Dragon Spawner

**Purpose:** To spawn an Ender Dragon every time a player places a Dragon Egg block.

**Instructions:** In the package `org.devoxx4kids.forge.mods`, make a new class called `DragonSpawner` and replace its code with the code shown in <<Dragon_Spawner_Code>>.

[[Dragon_Spawner_Code]]
.Dragon Spawner code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraft.entity.boss.EntityDragon;
import net.minecraft.init.Blocks;
import net.minecraft.util.BlockPos;
import net.minecraftforge.event.world.BlockEvent.PlaceEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class DragonSpawner {
	
	@SubscribeEvent
	public void spawnDragon(PlaceEvent event) {
		if (event.block == Blocks.dragon_egg.getBlockState().getBaseState()) {
			event.world.setBlockToAir(new BlockPos(event.pos.getX(), event.pos.getY(), event.pos.getZ()));
			EntityDragon dragon = new EntityDragon(event.world);
			dragon.setLocationAndAngles(event.pos.getX(), event.pos.getY(), event.pos.getZ(), 0, 0);
			event.world.spawnEntityInWorld(dragon);
		}
	}
}
----
====

Then, register it like you did with Chat Items, but use the line of code shown in <<Dragon_Spawner_Registering>>.

[[Dragon_Spawner_Registering]]
.Dragon Spawner registering
====
[source, java]
----
MinecraftForge.EVENT_BUS.register(new DragonSpawner());
----
====

**Gameplay:**

. Use the command "/give <your player name> dragon_egg" to give yourself a dragon egg
. Place down the dragon egg, and an Ender Dragon should spawn

The player name will not be your normal player name, it will be a Forge-generated player name. Check your chat window to see what your player name is.

=== Change block/entity

Change block that triggers spawning and spawn a different item. For example change the block to `sponge` and entity to `EntitySquid`. Use Ctrl+Space to show the list of items.

.Spawn squid
====
[source, java]
----
if (event.placedBlock == Blocks.sponge.getBlockState().getBaseState()) {
		event.world.setBlockToAir(new BlockPos(event.pos.getX(), event.pos.getY(), event.pos.getZ()));
		EntitySquid squid = new EntitySquid(event.world);
		squid.setLocationAndAngles(event.pos.getX(), event.pos.getY(), event.pos.getZ(), 0, 0);
		event.world.spawnEntityInWorld(squid);
}
----
====

After doing this, press Control + Shift + O on a Windows computer or Cmd + Shift + O on a Mac computer to import certain classes and fix some errors. When you test out this mod, place down a Wet Sponge, not a Sponge.

=== Change offset of entities

Change `event.pos.getX()`, `event.pos.getY()`, `event.pos.getZ()` and add or subtract 5 to show entities are produced at an offset.

.Spawn offset
====
[source, java]
----
dragon.setLocationAndAngles(event.pos.getX() + 5, event.pos.getY(), event.pos.getZ(), 0, 0);
----
====

== Creeper Spawn Alert

**Purpose:** To alert all players when a creeper spawns.

**Instructions:** In your package, make a new class called `CreeperSpawnAlert`. Replace its contents with <<Creeper_Spawn_Code>>.

[[Creeper_Spawn_Code]]
.Creeper Spawn Alert code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import java.util.List;

import net.minecraft.entity.monster.EntityCreeper;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.ChatComponentText;
import net.minecraft.util.EnumChatFormatting;
import net.minecraftforge.event.entity.EntityJoinWorldEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class CreeperSpawnAlert {

	@SubscribeEvent
	public void sendAlert(EntityJoinWorldEvent event) {
		if (!(event.entity instanceof EntityCreeper)) {
			return;
		}

		List players = event.entity.worldObj.playerEntities;

		for (int i = 0; i < players.size(); i++) {
			EntityPlayer player = (EntityPlayer) players.get(i);
			if (event.world.isRemote) {
				player.addChatMessage(new ChatComponentText(
						EnumChatFormatting.GREEN + "A creeper has spawned!"));
			}
		}
	}

}
----
====

Register it using the line in <<Creeper_Spawn_Registering>>.

[[Creeper_Spawn_Registering]]
.Creeper Spawn Alert registering
====
[source, java]
----
MinecraftForge.EVENT_BUS.register(new CreeperSpawnAlert());
----
====

**Gameplay:**

. Make sure you are not on peaceful mode.
. Set the time to night time ("/time set night") 

You should get a bunch of messages saying "A creeper has spawned!" in light green letters. One of these messages is sent to you every time a creeper spawns.

=== Change color/format of message

==== Change color to red

.Color of message
====
[source,java]
----
player.addChatMessage(new ChatComponentText(
		EnumChatFormatting.RED + "A creeper has spawned!"));
----
====

Try different colors by code completion after `EnumChatFormatting`.

==== Change style to italics

.Style of message
====
[source,java]
----
player.addChatMessage(new ChatComponentText(
		EnumChatFormatting.ITALIC + "A creeper has spawned!"));
----
====

Try different styles by code completion after `EnumChatFormatting`.

=== Change text of message

.Style of message
====
[source,java]
----
player.addChatMessage(new ChatComponentText(
		EnumChatFormatting.GREEN + "Run away, a creeper has spawned!"));
----
====

Talk about text within quotes.

=== Print same message for different mobs

.Same message for differet mobs using AND
====
[source, java]
----
if (!(event.entity instanceof EntityCreeper && event.entity instanceof EntityZombie)) {
	return;
}
----
====

OR

.Same message for differet mobs using OR
====
[source, java]
----
if (!(event.entity instanceof EntityCreeper) || !(event.entity instanceof EntityZombie)) {
	return;
}
----
====

Explain AND and OR

=== Print different message for different mobs

.Different message for different mobs
====
[source, java]
----
public void sendAlert(EntityJoinWorldEvent event) {
	if (!(event.entity instanceof EntityCreeper && event.entity instanceof EntityZombie)) {
		return;
	}
	
	String message;
	
	if (event.entity instanceof EntityCreeper) {
		message = "A creeper has spawned";
	} else {
		message = "A zombie has spawned";
	}

	List players = event.entity.worldObj.playerEntities;

	for (int i = 0; i < players.size(); i++) {
		EntityPlayer player = (EntityPlayer) players.get(i);
		if (event.world.isRemote) {
			player.addChatMessage(new ChatComponentText(
					EnumChatFormatting.GREEN + message));
		}
	}
}
----
====

=== Print message for all mobs

.Message for all mobs
====
[source, java]
----
if (!(event.entity instanceof EntityMob)) {
	return;
}
----
====

Explain how to reach `EntityMob`.

== Sharp Snowballs

**Purpose:** To turn all snowballs into arrows so that they can hurt entites.

**Instructions:** In your package, create a new class called `SharpSnowballs`. Replace its code with <<Snowballs_Code>>.

[[Snowballs_Code]]
.Sharp Snowballs code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraft.entity.Entity;
import net.minecraft.entity.projectile.EntityArrow;
import net.minecraft.entity.projectile.EntitySnowball;
import net.minecraft.world.World;
import net.minecraftforge.event.entity.EntityJoinWorldEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class SharpSnowballs {

	@SubscribeEvent
	public void replaceSnowballWithArrow(EntityJoinWorldEvent event) {
		Entity snowball = event.entity;
		World world = snowball.worldObj;

		if (!(snowball instanceof EntitySnowball)) {
			return;
		}

		if (!world.isRemote) {
			EntityArrow arrow = new EntityArrow(world);
			arrow.setLocationAndAngles(snowball.posX, snowball.posY, snowball.posZ,
					0, 0);
			arrow.motionX = snowball.motionX;
			arrow.motionY = snowball.motionY;
			arrow.motionZ = snowball.motionZ;

			// gets arrow out of player's head
			// gets the angle of arrow right, in the direction of motion
			arrow.posX += arrow.motionX;
			arrow.posY += arrow.motionY;
			arrow.posZ += arrow.motionZ;

			world.spawnEntityInWorld(arrow);
			snowball.setDead();
		}
	}

}
----
====

Register the new class using the line in <<Snowballs_Registering>>.

[[Snowballs_Registering]]
.Sharp Snowballs registering
====
[source, java]
----
MinecraftForge.EVENT_BUS.register(new SharpSnowballs());
----
====

**Gameplay:**

. Get a Snowball item from your inventory
. Right click with it to throw it
. It should turn into an arrow

You can also spawn Snow Golems by placing a pumpkin on top of a tower of two Snow blocks. The Snow Golem will act as a turret, shooting out snowballs that turn into arrows.

=== Explosive snowballs

[[Snowballs_Code]]
.Explosive Snowballs code
====
[source, java]
----
EntityTNTPrimed arrow = new EntityTNTPrimed(world);
arrow.fuse = 80;
----
====

== Overpowered Iron Golems

**Purpose:** To add helpful potion effects to Iron Golems when they spawn in the world.

**Instructions:**

In your package, make a new class called `OverpoweredIronGolems` and replace its contents with <<Iron_Golems_Code>>.

[[Iron_Golems_Code]]
.Overpowered Iron Golems code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraft.entity.EntityLiving;
import net.minecraft.entity.monster.EntityIronGolem;
import net.minecraft.potion.PotionEffect;
import net.minecraftforge.event.entity.EntityJoinWorldEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class OverpoweredIronGolems {
	
	@SubscribeEvent
	public void golemMagic(EntityJoinWorldEvent event) {
		if (!(event.entity instanceof EntityIronGolem)) {
			return;
		}
		
		EntityLiving entity = (EntityLiving) event.entity;
		entity.addPotionEffect(new PotionEffect(1, 1000000, 5));
		entity.addPotionEffect(new PotionEffect(5, 1000000, 5));
		entity.addPotionEffect(new PotionEffect(10, 1000000, 5));
		entity.addPotionEffect(new PotionEffect(11, 1000000, 5));
	}

}
----
====

Then, register the class using the line shown in <<Iron_Golems_Register>>.

[[Iron_Golems_Register]]
====
[source, java]
----
MinecraftForge.EVENT_BUS.register(new OverpoweredIronGolems());
----
====

**Gameplay:**

. Spawn an Iron Golem by using the command "/summon VillagerGolem".
. Spawn some hostile mobs near the Iron Golem

The golem should move towards them to kill them. Normally, Iron Golems move slowly, but with the speed effect from the mod, they should move very fast.

== Rain Water

**Purpose:** To place water at the feet of entities when it is raining.

**Instructions:** In your package, create a new class called `RainWater` and replace its contents with <<Rain_Code>>.

[[Rain_Code]]
.Rain Water code
====
[source, java]
----
package org.devoxx4kids.forge.mods;

import net.minecraft.entity.Entity;
import net.minecraft.init.Blocks;
import net.minecraft.util.BlockPos;
import net.minecraft.world.World;
import net.minecraftforge.event.entity.living.LivingEvent.LivingUpdateEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class RainWater {

	@SubscribeEvent
	public void makeWater(LivingUpdateEvent event) {
		Entity entity = event.entity;
		World world = entity.worldObj;
		int x = (int) Math.floor(entity.posX);
		int y = (int) Math.floor(entity.posY);
		int z = (int) Math.floor(entity.posZ);

		if (!entity.worldObj.isRaining()) {
			return;
		}

		for (int i = y; i < 256; i++) {
			if (world.getBlockState(new BlockPos(x, i, z)) != Blocks.air.getBlockState().getBaseState()) {
				return;
			}
		}
		
		if (world.isRemote || !world.getBlockState(new BlockPos(x, y - 1, z)).getBlock().isNormalCube()) {
			return;
		}

		world.setBlockState(new BlockPos(x, y, z), Blocks.water.getBlockState().getBaseState());
	}

}
----
====

Then, register it using the line shown in <<Rain_Registering>>.

[[Rain_Registering]]
.Rain Water registering
====
[source, java]
----
MinecraftForge.EVENT_BUS.register(new RainWater());
----
====

**Gameplay:**

. Use the command "/weather rain" to make the weather rainy
. Start moving, and water should be placed wherever you go, but it will disappear quickly

== Sharing Your Mods

Open up your computer's command prompt. Navigate to your Forge folder. Then, type the command `gradlew build`. On a Mac it may be `./gradlew build`. After the process completes, navigate to the "build" folder, then the "libs" folder inside that. In that folder, there should be a .jar file called `modid-1.0.jar`. This .jar file is all of your mods. 

To install your mod on your Minecraft launcher, follow the instructions at http://www.minecraftforge.net/wiki/Installation/Universal.

== Tips

* When changing an item or block, delete the current item/block and press `Ctrl + Space` to pull up a list of items and blocks that are availible.

[[Gradlew_command_output]]
== Gradlew command output

[source,text]
----
forge> ./gradlew setupDecompWorkspace eclipse
Download http://files.minecraftforge.net/maven/net/minecraftforge/gradle/ForgeGradle/1.2-SNAPSHOT/ForgeGradle-1.2-20150329.235405-283.jar
****************************
 Powered By MCP:             
 http://mcp.ocean-labs.de/   
 Searge, ProfMobius, Fesh0r, 
 R4wk, ZeuX, IngisKahn, bspkrs
 MCP Data version : snapshot_20141130
****************************
:extractMcpData
:getVersionJson
:extractUserDev
Download http://files.minecraftforge.net/maven/net/minecraftforge/forge/1.8-11.14.1.1341/forge-1.8-11.14.1.1341-userdev.jar
:genSrgs
:extractNatives
:getAssetsIndex
:getAssets
:makeStart
[ant:javac] warning: [options] bootstrap class path not set in conjunction with -source 1.6
[ant:javac] 1 warning
:downloadMcpTools SKIPPED
:downloadClient SKIPPED
:downloadServer SKIPPED
:mergeJars SKIPPED
:deobfuscateJar
Applying SpecialSource...
Applying Exceptor...
:decompile
:processSources
Injecting fml files
Applying fml patches
Applying forge patches
:remapJar
:extractMinecraftSrc
:recompMinecraft
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: Some input files use unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
:repackMinecraft
:setupDecompWorkspace
:eclipseClasspath
:eclipseJdt
:eclipseProject
:eclipse

BUILD SUCCESSFUL

Total time: 5 mins 38.591 secs